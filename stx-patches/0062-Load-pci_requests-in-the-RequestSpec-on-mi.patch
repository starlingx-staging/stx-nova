From 1868e86c31977207b73b78aaf061288cf4c56ba4 Mon Sep 17 00:00:00 2001
From: Ludovic Beliveau <ludovic.beliveau@windriver.com>
Date: Thu, 3 Nov 2016 12:39:05 -0400
Subject: [PATCH 062/143] Load pci_requests in the RequestSpec on
 migrate

On migrate, the NUMATopologyFilter and PciPassthroughFilter filters were
returning True on host_passes() because the pci_requests was not
included in the RequestSpec, even if the instance had specified PCI
devices.

This commit forces loading the 'pci_requests' on migrate.

__TYPE_upstreamable
__TAG_sriov,pci,pci_requests,migration
__R4_commit_8e1bd2b
__R3_commit_2769600
__TC2956
---
 nova/api/openstack/compute/migrate_server.py       |  9 ++-
 .../openstack/compute/admin_only_action_common.py  | 64 +++++++++++++++-------
 .../api/openstack/compute/test_migrate_server.py   | 22 ++++++--
 3 files changed, 68 insertions(+), 27 deletions(-)

diff --git a/nova/api/openstack/compute/migrate_server.py b/nova/api/openstack/compute/migrate_server.py
index d0a6be3..d82f0cc 100644
--- a/nova/api/openstack/compute/migrate_server.py
+++ b/nova/api/openstack/compute/migrate_server.py
@@ -45,7 +45,14 @@ class MigrateServerController(wsgi.Controller):
         context = req.environ['nova.context']
         context.can(ms_policies.POLICY_ROOT % 'migrate')
 
-        instance = common.get_instance(self.compute_api, context, id)
+        # Load 'pci_requests' explicitly else the request_spec won't
+        # specify it and NUMATopologyFilter and PciPassthroughFilter will
+        # return True to host_passes because it thinks there are no PCI in
+        # request.
+        expected_attrs = ['pci_requests']
+
+        instance = common.get_instance(self.compute_api, context, id,
+                                       expected_attrs=expected_attrs)
         try:
             self.compute_api.resize(req.environ['nova.context'], instance)
         except (exception.TooManyInstances, exception.QuotaError) as e:
diff --git a/nova/tests/unit/api/openstack/compute/admin_only_action_common.py b/nova/tests/unit/api/openstack/compute/admin_only_action_common.py
index 4a35aca..d7aa02c 100644
--- a/nova/tests/unit/api/openstack/compute/admin_only_action_common.py
+++ b/nova/tests/unit/api/openstack/compute/admin_only_action_common.py
@@ -30,28 +30,33 @@ class CommonMixin(object):
         self.req = fakes.HTTPRequest.blank('')
         self.context = self.req.environ['nova.context']
 
-    def _stub_instance_get(self, uuid=None):
+    def _stub_instance_get(self, uuid=None, expected_attrs=None):
         if uuid is None:
             uuid = uuidutils.generate_uuid()
         instance = fake_instance.fake_instance_obj(self.context,
                 id=1, uuid=uuid, vm_state=vm_states.ACTIVE,
                 task_state=None, launched_at=timeutils.utcnow())
         self.compute_api.get(
-            self.context, uuid, expected_attrs=None).AndReturn(instance)
+            self.context, uuid,
+            expected_attrs=expected_attrs).AndReturn(instance)
         instance.pci_devices = None
         return instance
 
-    def _stub_instance_get_failure(self, exc_info, uuid=None):
+    def _stub_instance_get_failure(self, exc_info, uuid=None,
+                                   expected_attrs=None):
         if uuid is None:
             uuid = uuidutils.generate_uuid()
         self.compute_api.get(
-            self.context, uuid, expected_attrs=None).AndRaise(exc_info)
+            self.context, uuid,
+            expected_attrs=expected_attrs).AndRaise(exc_info)
         return uuid
 
-    def _test_non_existing_instance(self, action, body_map=None):
+    def _test_non_existing_instance(self, action, body_map=None,
+                                    expected_attrs=None):
         uuid = uuidutils.generate_uuid()
         self._stub_instance_get_failure(
-                exception.InstanceNotFound(instance_id=uuid), uuid=uuid)
+                exception.InstanceNotFound(instance_id=uuid), uuid=uuid,
+                expected_attrs=expected_attrs)
 
         self.mox.ReplayAll()
         controller_function = getattr(self.controller, action)
@@ -64,12 +69,12 @@ class CommonMixin(object):
         self.mox.UnsetStubs()
 
     def _test_action(self, action, body=None, method=None,
-                     compute_api_args_map=None):
+                     compute_api_args_map=None, expected_attrs=None):
         if method is None:
             method = action.replace('_', '')
         compute_api_args_map = compute_api_args_map or {}
 
-        instance = self._stub_instance_get()
+        instance = self._stub_instance_get(expected_attrs=expected_attrs)
         args, kwargs = compute_api_args_map.get(action, ((), {}))
         getattr(self.compute_api, method)(self.context, instance, *args,
                                           **kwargs)
@@ -113,7 +118,7 @@ class CommonMixin(object):
 
     def _test_invalid_state(self, action, method=None, body_map=None,
                             compute_api_args_map=None,
-                            exception_arg=None):
+                            exception_arg=None, expected_attrs=None):
         if method is None:
             method = action.replace('_', '')
         if body_map is None:
@@ -121,7 +126,7 @@ class CommonMixin(object):
         if compute_api_args_map is None:
             compute_api_args_map = {}
 
-        instance = self._stub_instance_get()
+        instance = self._stub_instance_get(expected_attrs=expected_attrs)
 
         args, kwargs = compute_api_args_map.get(action, ((), {}))
 
@@ -146,12 +151,13 @@ class CommonMixin(object):
         self.mox.UnsetStubs()
 
     def _test_locked_instance(self, action, method=None, body=None,
-                              compute_api_args_map=None):
+                              compute_api_args_map=None,
+                              expected_attrs=None):
         if method is None:
             method = action.replace('_', '')
 
         compute_api_args_map = compute_api_args_map or {}
-        instance = self._stub_instance_get()
+        instance = self._stub_instance_get(expected_attrs=expected_attrs)
 
         args, kwargs = compute_api_args_map.get(action, ((), {}))
         getattr(self.compute_api, method)(self.context, instance, *args,
@@ -196,17 +202,21 @@ class CommonMixin(object):
 
 class CommonTests(CommonMixin, test.NoDBTestCase):
     def _test_actions(self, actions, method_translations=None, body_map=None,
-                      args_map=None):
+                      args_map=None, expected_attrs_map=None):
         method_translations = method_translations or {}
         body_map = body_map or {}
         args_map = args_map or {}
+        expected_attrs_map = expected_attrs_map or {}
         for action in actions:
+            expected_attrs = expected_attrs_map.get(action)
+
             method = method_translations.get(action)
             body = body_map.get(action)
             self.mox.StubOutWithMock(self.compute_api,
                                      method or action.replace('_', ''))
             self._test_action(action, method=method, body=body,
-                              compute_api_args_map=args_map)
+                              compute_api_args_map=args_map,
+                              expected_attrs=expected_attrs)
             # Re-mock this.
             self.mox.StubOutWithMock(self.compute_api, 'get')
 
@@ -227,22 +237,30 @@ class CommonTests(CommonMixin, test.NoDBTestCase):
             # Re-mock this.
             self.mox.StubOutWithMock(self.compute_api, 'get')
 
-    def _test_actions_with_non_existed_instance(self, actions, body_map=None):
+    def _test_actions_with_non_existed_instance(self, actions, body_map=None,
+                                                expected_attrs_map=None):
         body_map = body_map or {}
+        expected_attrs_map = expected_attrs_map or {}
         for action in actions:
+            expected_attrs = expected_attrs_map.get(action)
+
             self._test_non_existing_instance(action,
-                                             body_map=body_map)
+                                             body_map=body_map,
+                                             expected_attrs=expected_attrs)
             # Re-mock this.
             self.mox.StubOutWithMock(self.compute_api, 'get')
 
     def _test_actions_raise_conflict_on_invalid_state(
             self, actions, method_translations=None, body_map=None,
-            args_map=None, exception_args=None):
+            args_map=None, exception_args=None, expected_attrs_map=None):
         method_translations = method_translations or {}
         body_map = body_map or {}
         args_map = args_map or {}
         exception_args = exception_args or {}
+        expected_attrs_map = expected_attrs_map or {}
         for action in actions:
+            expected_attrs = expected_attrs_map.get(action)
+
             method = method_translations.get(action)
             exception_arg = exception_args.get(action)
             self.mox.StubOutWithMock(self.compute_api,
@@ -250,22 +268,28 @@ class CommonTests(CommonMixin, test.NoDBTestCase):
             self._test_invalid_state(action, method=method,
                                      body_map=body_map,
                                      compute_api_args_map=args_map,
-                                     exception_arg=exception_arg)
+                                     exception_arg=exception_arg,
+                                     expected_attrs=expected_attrs)
             # Re-mock this.
             self.mox.StubOutWithMock(self.compute_api, 'get')
 
     def _test_actions_with_locked_instance(self, actions,
                                            method_translations=None,
-                                           body_map=None, args_map=None):
+                                           body_map=None, args_map=None,
+                                           expected_attrs_map=None):
         method_translations = method_translations or {}
         body_map = body_map or {}
         args_map = args_map or {}
+        expected_attrs_map = expected_attrs_map or {}
         for action in actions:
+            expected_attrs = expected_attrs_map.get(action)
+
             method = method_translations.get(action)
             body = body_map.get(action)
             self.mox.StubOutWithMock(self.compute_api,
                                      method or action.replace('_', ''))
             self._test_locked_instance(action, method=method, body=body,
-                                       compute_api_args_map=args_map)
+                                       compute_api_args_map=args_map,
+                                       expected_attrs=expected_attrs)
             # Re-mock this.
             self.mox.StubOutWithMock(self.compute_api, 'get')
diff --git a/nova/tests/unit/api/openstack/compute/test_migrate_server.py b/nova/tests/unit/api/openstack/compute/test_migrate_server.py
index 3879015..0aeaed1 100644
--- a/nova/tests/unit/api/openstack/compute/test_migrate_server.py
+++ b/nova/tests/unit/api/openstack/compute/test_migrate_server.py
@@ -62,9 +62,11 @@ class MigrateServerTestsV21(admin_only_action_common.CommonTests):
         args_map = {'_migrate_live': ((False, self.disk_over_commit,
                                        'hostname', self.force, self.async),
                                       {})}
+        expected_attrs_map = {'_migrate': ['pci_requests']}
         self._test_actions(['_migrate', '_migrate_live'], body_map=body_map,
                            method_translations=method_translations,
-                           args_map=args_map)
+                           args_map=args_map,
+                           expected_attrs_map=expected_attrs_map)
 
     def test_migrate_none_hostname(self):
         method_translations = {'_migrate': 'resize',
@@ -73,14 +75,18 @@ class MigrateServerTestsV21(admin_only_action_common.CommonTests):
         args_map = {'_migrate_live': ((False, self.disk_over_commit, None,
                                        self.force, self.async),
                                       {})}
+        expected_attrs_map = {'_migrate': ['pci_requests']}
         self._test_actions(['_migrate', '_migrate_live'], body_map=body_map,
                            method_translations=method_translations,
-                           args_map=args_map)
+                           args_map=args_map,
+                           expected_attrs_map=expected_attrs_map)
 
     def test_migrate_with_non_existed_instance(self):
         body_map = self._get_migration_body(host='hostname')
+        expected_attrs_map = {'_migrate': ['pci_requests']}
         self._test_actions_with_non_existed_instance(
-            ['_migrate', '_migrate_live'], body_map=body_map)
+            ['_migrate', '_migrate_live'], body_map=body_map,
+            expected_attrs_map=expected_attrs_map)
 
     def test_migrate_raise_conflict_on_invalid_state(self):
         method_translations = {'_migrate': 'resize',
@@ -91,10 +97,12 @@ class MigrateServerTestsV21(admin_only_action_common.CommonTests):
                                       {})}
         exception_arg = {'_migrate': 'migrate',
                          '_migrate_live': 'os-migrateLive'}
+        expected_attrs_map = {'_migrate': ['pci_requests']}
         self._test_actions_raise_conflict_on_invalid_state(
             ['_migrate', '_migrate_live'], body_map=body_map,
             args_map=args_map, method_translations=method_translations,
-            exception_args=exception_arg)
+            exception_args=exception_arg,
+            expected_attrs_map=expected_attrs_map)
 
     def test_actions_with_locked_instance(self):
         method_translations = {'_migrate': 'resize',
@@ -105,13 +113,15 @@ class MigrateServerTestsV21(admin_only_action_common.CommonTests):
         args_map = {'_migrate_live': ((False, self.disk_over_commit,
                                        'hostname', self.force, self.async),
                                       {})}
+        expected_attrs_map = {'_migrate': ['pci_requests']}
         self._test_actions_with_locked_instance(
             ['_migrate', '_migrate_live'], body_map=body_map,
-            args_map=args_map, method_translations=method_translations)
+            args_map=args_map, method_translations=method_translations,
+            expected_attrs_map=expected_attrs_map)
 
     def _test_migrate_exception(self, exc_info, expected_result):
         self.mox.StubOutWithMock(self.compute_api, 'resize')
-        instance = self._stub_instance_get()
+        instance = self._stub_instance_get(expected_attrs=['pci_requests'])
         self.compute_api.resize(self.context, instance).AndRaise(exc_info)
 
         self.mox.ReplayAll()
-- 
2.7.4

