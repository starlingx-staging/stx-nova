From f849bfd126c85209b020fa5bbf4c798df467ea6a Mon Sep 17 00:00:00 2001
From: Michael Lo <Michael.Lo@windriver.com>
Date: Mon, 24 Apr 2017 11:00:04 -0400
Subject: [PATCH] Failed to boot local_lvm vms on ip20-27 with
 compute-2 on local_lvm storage backing

Instead of writing just 512 byte, we change the code to write 4096.
The 4KB byte is needed so this works on 4Kn drives.

The nova libvirt driver code gets the disk cache mode information by running a
open/write test to determine whether the direct io is supported or not.
The write is too small for a 4096-byte sector hard drive so the cache mode
is incorrectly set.

-If direct I/O is supported, then it sets the "disk_cachemode" to "none".
 This disk cache mode is compatible with io=native
-If direct I/O is NOT supported, then it sets the "disk_cachemode" to "writethrough".
 This disk cache mode is not compatible with io=native
---
 nova/virt/libvirt/driver.py | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/nova/virt/libvirt/driver.py b/nova/virt/libvirt/driver.py
index de57299..05fbe15 100644
--- a/nova/virt/libvirt/driver.py
+++ b/nova/virt/libvirt/driver.py
@@ -3063,8 +3063,9 @@ class LibvirtDriver(driver.ComputeDriver):
         fd = None
         try:
             fd = os.open(testfile, os.O_CREAT | os.O_WRONLY | os.O_DIRECT)
-            # Check is the write allowed with 512 byte alignment
-            align_size = 512
+            # Check is the write allowed with 4096 byte alignment
+            # The 4KB block size is needed so this works on 4Kn drives
+            align_size = 4096
             m = mmap.mmap(-1, align_size)
             m.write(r"x" * align_size)
             os.write(fd, m)
-- 
2.7.4

