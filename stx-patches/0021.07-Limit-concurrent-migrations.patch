From 00f21a9a5ec87f2b8217f3d537c0e9ee93aec6ba Mon Sep 17 00:00:00 2001
From: Jim Gauld <james.gauld@windriver.com>
Date: Wed, 16 Nov 2016 17:40:52 -0500
Subject: [PATCH] Limit concurrent migrations

This limits concurrent outgoing migrations (i.e., cold-migration, resize)
with default max_concurrent_migrations of 1. This mechanism limits the
IO load on a host.  Migration status is first changed to 'queued', then
outgoing migrations are processed in order.
---
 nova/compute/manager.py                     | 42 +++++++++++++++++++++++------
 nova/conf/compute.py                        |  5 ++++
 nova/tests/unit/compute/test_compute_mgr.py |  4 +--
 3 files changed, 41 insertions(+), 10 deletions(-)

diff --git a/nova/compute/manager.py b/nova/compute/manager.py
index ed11430..cacf5ba 100644
--- a/nova/compute/manager.py
+++ b/nova/compute/manager.py
@@ -540,6 +540,11 @@ class ComputeManager(manager.Manager):
                 CONF.max_concurrent_live_migrations)
         else:
             self._live_migration_semaphore = compute_utils.UnlimitedSemaphore()
+        if max(CONF.max_concurrent_migrations, 0) != 0:
+            self._migration_semaphore = eventlet.semaphore.Semaphore(
+                CONF.max_concurrent_migrations)
+        else:
+            self._migration_semaphore = compute_utils.UnlimitedSemaphore()
         self.suspected_uuids = set([])
 
         super(ComputeManager, self).__init__(service_name="compute",
@@ -3894,14 +3899,9 @@ class ComputeManager(manager.Manager):
             # not re-scheduling
             six.reraise(*exc_info)
 
-    @wrap_exception()
-    @reverts_task_state
-    @wrap_instance_event(prefix='compute')
-    @errors_out_migration
-    @wrap_instance_fault
-    def resize_instance(self, context, instance, image,
-                        reservations, migration, instance_type,
-                        clean_shutdown):
+    def _do_resize_instance(self, context, instance, image,
+                            reservations, migration, instance_type,
+                            clean_shutdown):
         """Starts the migration of a running instance to another host."""
 
         quotas = objects.Quotas.from_reservations(context,
@@ -3975,6 +3975,32 @@ class ComputeManager(manager.Manager):
                    phase=fields.NotificationPhase.END)
             self.instance_events.clear_events_for_instance(instance)
 
+    @wrap_exception()
+    @reverts_task_state
+    @wrap_instance_event(prefix='compute')
+    @errors_out_migration
+    @wrap_instance_fault
+    def resize_instance(self, context, instance, image,
+                        reservations, migration, instance_type,
+                        clean_shutdown):
+        """Queue resize instance to another host."""
+
+        migration.status = 'queued'
+        with migration.obj_as_admin():
+            migration.save()
+
+        def dispatch_resize_instance(*args, **kwargs):
+            with self._migration_semaphore:
+                self._do_resize_instance(*args, **kwargs)
+
+        # NOTE(jgauld): We spawn here to return the RPC worker thread back to
+        # the pool. Since what follows could take a really long time, we don't
+        # want to tie up RPC workers.
+        utils.spawn_n(dispatch_resize_instance,
+                      context, instance, image,
+                      reservations, migration, instance_type,
+                      clean_shutdown)
+
     def _terminate_volume_connections(self, context, instance, bdms):
         connector = self.driver.get_volume_connector(instance)
         for bdm in bdms:
diff --git a/nova/conf/compute.py b/nova/conf/compute.py
index e0344bc..c7c3e7f 100644
--- a/nova/conf/compute.py
+++ b/nova/conf/compute.py
@@ -374,6 +374,11 @@ Possible values:
 * Any positive integer representing maximum number of live migrations
   to run concurrently.
 """),
+    cfg.IntOpt('max_concurrent_migrations',
+               default=1,
+               help="""
+Maximum number of migrations to run concurrently.
+"""),
     cfg.IntOpt('block_device_allocate_retries',
                default=60,
                help="""
diff --git a/nova/tests/unit/compute/test_compute_mgr.py b/nova/tests/unit/compute/test_compute_mgr.py
index 48f8a22..7a74860 100755
--- a/nova/tests/unit/compute/test_compute_mgr.py
+++ b/nova/tests/unit/compute/test_compute_mgr.py
@@ -4822,9 +4822,9 @@ class ComputeManagerMigrationTestCase(test.NoDBTestCase):
                 reservations=[], migration=self.migration,
                 instance_type='type', clean_shutdown=True)
             self.assertEqual("error", self.migration.status)
-            self.assertEqual([mock.call(), mock.call()],
+            self.assertEqual([mock.call(), mock.call(), mock.call()],
                              migration_save.mock_calls)
-            self.assertEqual([mock.call(), mock.call()],
+            self.assertEqual([mock.call(), mock.call(), mock.call()],
                              migration_obj_as_admin.mock_calls)
 
     def _test_revert_resize_instance_destroy_disks(self, is_shared=False):
-- 
2.7.4

